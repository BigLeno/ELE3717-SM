
atv05_3717_251.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000015e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000916  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000764  00000000  00000000  00000b8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000380  00000000  00000000  000012ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  00001670  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040a  00000000  00000000  00001708  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000019d  00000000  00000000  00001b12  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00001caf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 83 00 	call	0x106	; 0x106 <main>
  78:	0c 94 ad 00 	jmp	0x15a	; 0x15a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <spi_init>:
		max7219_send(i, 0x00);
	}
}

void max7219_set_column(int col, uint8_t value) {
	max7219_send(col+1, value);
  80:	84 b1       	in	r24, 0x04	; 4
  82:	8c 62       	ori	r24, 0x2C	; 44
  84:	84 b9       	out	0x04, r24	; 4
  86:	8c b5       	in	r24, 0x2c	; 44
  88:	81 65       	ori	r24, 0x51	; 81
  8a:	8c bd       	out	0x2c, r24	; 44
  8c:	85 b1       	in	r24, 0x05	; 5
  8e:	84 60       	ori	r24, 0x04	; 4
  90:	85 b9       	out	0x05, r24	; 5
  92:	08 95       	ret

00000094 <spi_transmit>:
  94:	8e bd       	out	0x2e, r24	; 46
  96:	0d b4       	in	r0, 0x2d	; 45
  98:	07 fe       	sbrs	r0, 7
  9a:	fd cf       	rjmp	.-6      	; 0x96 <spi_transmit+0x2>
  9c:	08 95       	ret

0000009e <max7219_send>:
  9e:	cf 93       	push	r28
  a0:	c6 2f       	mov	r28, r22
  a2:	95 b1       	in	r25, 0x05	; 5
  a4:	9b 7f       	andi	r25, 0xFB	; 251
  a6:	95 b9       	out	0x05, r25	; 5
  a8:	0e 94 4a 00 	call	0x94	; 0x94 <spi_transmit>
  ac:	8c 2f       	mov	r24, r28
  ae:	0e 94 4a 00 	call	0x94	; 0x94 <spi_transmit>
  b2:	85 b1       	in	r24, 0x05	; 5
  b4:	84 60       	ori	r24, 0x04	; 4
  b6:	85 b9       	out	0x05, r24	; 5
  b8:	cf 91       	pop	r28
  ba:	08 95       	ret

000000bc <max7219_init>:
  bc:	60 e0       	ldi	r22, 0x00	; 0
  be:	8f e0       	ldi	r24, 0x0F	; 15
  c0:	0e 94 4f 00 	call	0x9e	; 0x9e <max7219_send>
  c4:	60 e0       	ldi	r22, 0x00	; 0
  c6:	89 e0       	ldi	r24, 0x09	; 9
  c8:	0e 94 4f 00 	call	0x9e	; 0x9e <max7219_send>
  cc:	63 e0       	ldi	r22, 0x03	; 3
  ce:	8a e0       	ldi	r24, 0x0A	; 10
  d0:	0e 94 4f 00 	call	0x9e	; 0x9e <max7219_send>
  d4:	67 e0       	ldi	r22, 0x07	; 7
  d6:	8b e0       	ldi	r24, 0x0B	; 11
  d8:	0e 94 4f 00 	call	0x9e	; 0x9e <max7219_send>
  dc:	61 e0       	ldi	r22, 0x01	; 1
  de:	8c e0       	ldi	r24, 0x0C	; 12
  e0:	0e 94 4f 00 	call	0x9e	; 0x9e <max7219_send>
  e4:	08 95       	ret

000000e6 <max7219_clear>:
  e6:	cf 93       	push	r28
  e8:	df 93       	push	r29
  ea:	c1 e0       	ldi	r28, 0x01	; 1
  ec:	d0 e0       	ldi	r29, 0x00	; 0
  ee:	05 c0       	rjmp	.+10     	; 0xfa <max7219_clear+0x14>
  f0:	60 e0       	ldi	r22, 0x00	; 0
  f2:	8c 2f       	mov	r24, r28
  f4:	0e 94 4f 00 	call	0x9e	; 0x9e <max7219_send>
  f8:	21 96       	adiw	r28, 0x01	; 1
  fa:	c9 30       	cpi	r28, 0x09	; 9
  fc:	d1 05       	cpc	r29, r1
  fe:	c4 f3       	brlt	.-16     	; 0xf0 <max7219_clear+0xa>
 100:	df 91       	pop	r29
 102:	cf 91       	pop	r28
 104:	08 95       	ret

00000106 <main>:
}

int main() {
	spi_init();
 106:	0e 94 40 00 	call	0x80	; 0x80 <spi_init>
	max7219_init();
 10a:	0e 94 5e 00 	call	0xbc	; 0xbc <max7219_init>
	max7219_clear();
 10e:	0e 94 73 00 	call	0xe6	; 0xe6 <max7219_clear>

	for (int pos = 0; pos < 8; pos++) {
 112:	00 e0       	ldi	r16, 0x00	; 0
 114:	10 e0       	ldi	r17, 0x00	; 0
 116:	1d c0       	rjmp	.+58     	; 0x152 <main+0x4c>
		for (int linha = 1; linha <= 8; linha++) {
			max7219_send(linha, 1 << pos);
 118:	61 e0       	ldi	r22, 0x01	; 1
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	00 2e       	mov	r0, r16
 11e:	02 c0       	rjmp	.+4      	; 0x124 <main+0x1e>
 120:	66 0f       	add	r22, r22
 122:	77 1f       	adc	r23, r23
 124:	0a 94       	dec	r0
 126:	e2 f7       	brpl	.-8      	; 0x120 <main+0x1a>
 128:	8c 2f       	mov	r24, r28
 12a:	0e 94 4f 00 	call	0x9e	; 0x9e <max7219_send>
	spi_init();
	max7219_init();
	max7219_clear();

	for (int pos = 0; pos < 8; pos++) {
		for (int linha = 1; linha <= 8; linha++) {
 12e:	21 96       	adiw	r28, 0x01	; 1
 130:	02 c0       	rjmp	.+4      	; 0x136 <main+0x30>
 132:	c1 e0       	ldi	r28, 0x01	; 1
 134:	d0 e0       	ldi	r29, 0x00	; 0
 136:	c9 30       	cpi	r28, 0x09	; 9
 138:	d1 05       	cpc	r29, r1
 13a:	74 f3       	brlt	.-36     	; 0x118 <main+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13c:	2f ef       	ldi	r18, 0xFF	; 255
 13e:	83 ec       	ldi	r24, 0xC3	; 195
 140:	99 e0       	ldi	r25, 0x09	; 9
 142:	21 50       	subi	r18, 0x01	; 1
 144:	80 40       	sbci	r24, 0x00	; 0
 146:	90 40       	sbci	r25, 0x00	; 0
 148:	e1 f7       	brne	.-8      	; 0x142 <main+0x3c>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <main+0x46>
 14c:	00 00       	nop
int main() {
	spi_init();
	max7219_init();
	max7219_clear();

	for (int pos = 0; pos < 8; pos++) {
 14e:	0f 5f       	subi	r16, 0xFF	; 255
 150:	1f 4f       	sbci	r17, 0xFF	; 255
 152:	08 30       	cpi	r16, 0x08	; 8
 154:	11 05       	cpc	r17, r1
 156:	6c f3       	brlt	.-38     	; 0x132 <main+0x2c>
 158:	ff cf       	rjmp	.-2      	; 0x158 <main+0x52>

0000015a <_exit>:
 15a:	f8 94       	cli

0000015c <__stop_program>:
 15c:	ff cf       	rjmp	.-2      	; 0x15c <__stop_program>
